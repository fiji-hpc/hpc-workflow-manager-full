#!/usr/bin/env bash
#
# This script builds required libraries and copies into 
#   Fiji installation directory.
#
#Usage: do-release <Directory with Fiji installation>
#
UPDATE_SITE=HPC-ParallelTools

mvn clean install -Denforcer.skip=true

DIR=`readlink -f $1`
OLD_DIR=`readlink -f .`
JARS="cluster-job-launcher-*.jar \
 heappe-java-client-*.jar \
 hpc-workflow-manager-client-*.jar \
 hpc-workflow-manager-hpc-adapter-*.jar \
 ikonli-core-*.jar \
 ikonli-javafx-*.jar \
 ikonli-materialdesign-pack-*.jar \
 ini4j-*.jar \
 it4i-common-*.jar \
 jaxrpc-api-*.jar \
 runners-logging-ui-*.jar \
 scijava-parallel-*.jar \
 scp-java-client-*.jar \
 swing-javafx-ui-*.jar"
 

cd $DIR/jars
rm -f $JARS
cd $OLD_DIR
cp target/module-assembly-bin/lib/*.jar $DIR/jars/

# Detect Fiji supported OS executable name:
if [ "$(uname)" == "Darwin" ]; then
    FIJI_APP=/Contents/MacOS/ImageJ-macosx
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    FIJI_APP=ImageJ-linux64
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
    FIJI_APP=ImageJ-win64.exe
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
    FIJI_APP=ImageJ-win64.exe
fi
echo $FIJI_APP

$DIR/$FIJI_APP --update upload-complete-site $UPDATE_SITE
